attack_technique: T1078.004
display_name: 'Valid Accounts: Cloud Accounts'

atomic_tests:
- name: Creating GCP Service Account and Service Account Key
  auto_generated_guid: 9fdd83fd-bd53-46e5-a716-9dec89c8ae8e
  description: |
    GCP Service Accounts can be used to gain intial access as well as maintain persistence inside Google Cloud.
  supported_platforms:
  - google-workspace
  - iaas:gcp

  input_arguments:
    project-id:
      description: ID of the project, you want to create service account as well as service account key for
      type: string
      default: art-project-1

    service-account-name:
      description: Name of the service account
      type: string
      default: gcp-art-service-account-1

    service-account-email:
      description: Email of the service account
      type: string
      default: gcp-art-service-account-1@art-project-1.iam.gserviceaccount.com

    output-key-file:
      description: Email of the service account
      type: string
      default: gcp-art-service-account-1.json

  executor:
    name: sh
    elevation_required: false
    command: |
      gcloud auth login --no-launch-browser
      gcloud config set project #{project-id}
      gcloud iam service-accounts create #{service-account-name}
      gcloud iam service-accounts keys create #{output-key-file} --iam-account=#{service-account-email}
    cleanup_command: |
      gcloud iam service-accounts delete #{service-account-email} --quiet
  dependency_executor_name: sh
  dependencies:
  - description: |
      Requires gcloud
    prereq_command: |
      if [ -x "$(command -v gcloud)" ]; then exit 0; else exit 1; fi;
    get_prereq_command: |
      echo "Please Install Google Cloud SDK before running this atomic test : https://cloud.google.com/sdk/docs/install"
- name: Azure Persistence Automation Runbook Created or Modified
  auto_generated_guid: 348f4d14-4bd3-4f6b-bd8a-61237f78b3ac
  description: |
    Identifies when an Azure Automation runbook is created or modified. An adversary may create or modify an Azure
    Automation runbook to execute malicious code and maintain persistence in their target's environment.
  supported_platforms:
  - iaas:azure
  input_arguments:
    username:
      description: Azure username
      type: String
      default: null
    password:
      description: Azure password
      type: String
      default: null
    resource_group:
      description: Name of the resource group
      type: String
      default: null
    runbook_name:
      description: Name of the runbook name
      type: String
      default: null
    automation_account_name:
      description: Name of the automation account name
      type: String
      default: null
  dependency_executor_name: powershell
  dependencies:
  - description: |
      Install-Module -Name Az
    prereq_command: |
      try {if (Get-InstalledModule -Name Az -ErrorAction SilentlyContinue) {exit 0} else {exit 1}} catch {exit 1}
    get_prereq_command: |
      Install-Module -Name Az -Scope CurrentUser -Force
  executor:
    command: |
      $secure_pwd = "#{password}" | ConvertTo-SecureString -AsPlainText -Force
      $creds = New-Object System.Management.Automation.PSCredential -ArgumentList "#{username}", $secure_pwd
      Connect-AzAccount -Credential $creds
      New-AzAutomationRunbook -Name #{runbook_name} -Type PowerShell -ResourceGroupName #{resource_group} -Description 'my-test-runbook' -AutomationAccountName #{automation_account_name}
      Remove-AzAutomationRunbook -AutomationAccountName #{automation_account_name} -Name #{runbook_name} -ResourceGroupName #{resource_group} -Force
    name: powershell
    elevation_required: false
